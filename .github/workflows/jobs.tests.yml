name: Run Tests and Execute Static Analysis
on:
  workflow_call:
    inputs:
      KEY:
        required: true
        type: string
      REF:
        required: true
        type: string
      EVENT:
        required: true
        type: string
      TEST_COMMAND:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      REPO_ACCESS_TOKEN:
        required: true
      SNYK_TOKEN:
        required: true

jobs:
  unit-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - name: Enable Corepack
      run: corepack enable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-build
    - name: Run unit tests
      run: ${{ inputs.TEST_COMMAND }}
      shell: bash
    - uses: actions/cache/save@v4
      id: build-cache
      with:
        path: ./*
        key: ${{ inputs.KEY }}-final
          
  sonarcloud:
    needs: [unit-tests]
    name: Static Analysis (SonarCloud)
    if: inputs.REF == 'refs/heads/main' || inputs.EVENT == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-final
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    needs: [unit-tests]
    name: Static Analysis (Snyk)
    if: inputs.REF == 'refs/heads/main' || inputs.EVENT == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-final
    - name: Vulnerability Check
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --sarif-file-output=snyk.sarif --org=233d0ab0-1482-4c1e-9664-f794b1173f94
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
        
    - name: Vulnerability Check
      uses: snyk/actions/node@master
      with:
        args:
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
  coverage-reports:
    permissions:
      pull-requests: write
    needs: [unit-tests]
    if: inputs.EVENT == 'pull_request'
    name: Code Coverage Reports
    runs-on: ubuntu-latest
    steps:
    - name: Enable Corepack
      run: corepack enable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-final
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: /**/build/reports/coverage/cobertura-coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    - name: Add Code Coverage Report on PR Comment
      uses: marocchino/sticky-pull-request-comment@v2.9.0
      with:
        recreate: true
        path: code-coverage-results.md
