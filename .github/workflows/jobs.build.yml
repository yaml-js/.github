name: Publish Packages
on:
  workflow_call:
    inputs:
      KEY:
        required: true
        type: string
      EVENT:
        required: true
        type: string
    secrets:
      GIST_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      REPO_ACCESS_TOKEN:
        required: true

jobs:
  initialize:
    name: Initialize CI environment
    uses: yaml-js/.github/.github/workflows/jobs.initialize-ci.yml@main
    secrets: inherit
    with:
      KEY: ${{ inputs.KEYÂ }}

  build:
    needs: [initialize]
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Enable Corepack
      run: corepack enable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-workspace
    - name: Build packages
      run: yarn build
    - uses: actions/cache/save@v4
      id: build-cache
      with:
        path: ./*
        key: ${{ inputs.KEY }}-build

  unit-tests:
    needs: [build]
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - name: Enable Corepack
      run: corepack enable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-build
    - name: Run unit tests
      run: yarn test
    - uses: actions/cache/save@v4
      id: build-cache
      with:
        path: ./*
        key: ${{ inputs.KEY }}-final

          
  sonarcloud:
    needs: [unit-tests]
    name: SonarCloud
    if: github.ref == 'ref/heads/main' || inputs.EVENT == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-final
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  coverage-reports:
    permissions:
      pull-requests: write
    needs: [unit-tests]
    if: inputs.EVENT == 'pull_request'
    name: Code Coverage Reports
    runs-on: ubuntu-latest
    steps:
    - name: Enable Corepack
      run: corepack enable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
    - uses: actions/cache/restore@v4
      with:
        path: ./*
        key: ${{ inputs.KEY }}-final
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: /**/packages/*/build/reports/coverage/cobertura-coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    - name: Add Code Coverage Report on PR Comment
      uses: marocchino/sticky-pull-request-comment@v2.9.0
      with:
        recreate: true
        path: code-coverage-results.md
    - name: Generate Converage and Test Badges
      uses: gaelgirodon/ci-badges-action@v1.5.0
      with:
        gist-id: 202111948b143151aac80d6bcf2f603f
        token: ${{ secrets.GIST_TOKEN }}
